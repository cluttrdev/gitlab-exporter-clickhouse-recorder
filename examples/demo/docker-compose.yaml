name: glchr-demo

services:
  gitlab-exporter:
    container_name: gitlab-exporter
    depends_on:
      - gitlab-exporter-clickhouse-recorder
    image: ghcr.io/cluttrdev/gitlab-exporter:latest
    environment:
      GLE_GITLAB_TOKEN: ${GLE_GITLAB_TOKEN}
      GLE_LOG_LEVEL: debug
    volumes:
      - ./gitlab-exporter/config.yaml:/etc/gitlab-exporter.yaml:ro
    expose:
      - "9100"
    ports:
      - 127.0.0.1:9100:9100
    command: ["run", "--config", "/etc/gitlab-exporter.yaml", "--catchup"]

  gitlab-exporter-clickhouse-recorder:
    container_name: gitlab-exporter-clickhouse-recorder
    depends_on:
      clickhouse:
        condition: service_healthy
      gitlab-exporter-clickhouse-recorder-migrate:
        condition: service_completed_successfully
    image: docker.io/akun73/gitlab-exporter-clickhouse-recorder:latest
    environment:
      GLCHR_LOG_LEVEL: debug
    volumes:
      - ./gitlab-exporter-clickhouse-recorder/config.yaml:/etc/gitlab-exporter-clickhouse-recorder.yaml:ro
    expose:
      - "36275"
      - "9100"
    ports:
      - 127.0.0.1:36275:36275
      - 127.0.0.1:9101:9100
    command: ["run", "--config", "/etc/gitlab-exporter-clickhouse-recorder.yaml"]

  gitlab-exporter-clickhouse-recorder-migrate:
    container_name: gitlab-exporter-clickhouse-recorder-migrate
    depends_on:
      clickhouse:
        condition: service_healthy
    image: docker.io/akun73/gitlab-exporter-clickhouse-recorder:latest
    environment:
      GLCHR_LOG_LEVEL: debug
    volumes:
      - ./gitlab-exporter-clickhouse-recorder/config.yaml:/etc/gitlab-exporter-clickhouse-recorder.yaml:ro
    command: ["migrate", "--config", "/etc/gitlab-exporter-clickhouse-recorder.yaml"]

  clickhouse:
    container_name: clickhouse
    image: docker.io/clickhouse/clickhouse-server:latest
    environment:
      # variables used in ./clickhouse/initdb.d/init-db.sh
      INITDB_CLICKHOUSE_DATABASE: "gitlab_ci"

      INITDB_CLICKHOUSE_USER: "glchr"
      INITDB_CLICKHOUSE_PASSWORD: "glchr"

      INITDB_CLICKHOUSE_READONLY_USER: "grafana"
      INITDB_CLICKHOUSE_READONLY_PASSWORD: "grafana"
    volumes:
      - ./clickhouse/config.xml:/etc/clickhouse-server/config.d/config.xml:ro
      - ./clickhouse/users.xml:/etc/clickhouse-server/users.d/users.xml:ro
      - ./clickhouse/initdb.d/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
      - clickhouse_data:/var/lib/clickhouse/
      - clickhouse_logs:/var/log/clickhouse-server/
    expose:
      - "9000"
    ports:
      - 127.0.0.1:8123:8123  # http
      - 127.0.0.1:9000:9000  # native
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: clickhouse client --query='use gitlab_ci'
      interval: 10s

  prometheus:
    container_name: prometheus
    image: docker.io/prom/prometheus:v2.50.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/var/lib/prometheus
    ports:
      - 127.0.0.1:9090:9090

  grafana:
    container_name: grafana
    depends_on:
      - clickhouse
    image: docker.io/grafana/grafana:10.2.4
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: hunter2

      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource

      GF_CLICKHOUSE_USER: grafana
      GF_CLICKHOUSE_PASSWORD: grafana
    volumes:
      - ./grafana/provisioning/datasources/:/etc/grafana/provisioning/datasources/
      - ./grafana/provisioning/dashboards/:/etc/grafana/provisioning/dashboards/
      - grafana_data:/var/lib/grafana
    ports:
      - 127.0.0.1:3000:3000

volumes:
  clickhouse_data: {}
  clickhouse_logs: {}
  prometheus_data: {}
  grafana_data: {}

